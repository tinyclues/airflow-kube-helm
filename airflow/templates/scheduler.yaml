apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: airflow-scheduler
  labels:
    app: {{ template "airflow.name" . }}-scheduler
    chart: {{ template "airflow.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  serviceAccountName: airflow-cluster-access
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 100%
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmaps.yaml") . | sha256sum }}
        configmap.fabric8.io/update-on-change: "airflow-env"
      labels:
        app: {{ template "airflow.name" . }}-scheduler
        release: {{ .Release.Name }}
    spec:
      securityContext:
        fsGroup: 1000
      restartPolicy: Always
      - name: scheduler
        image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
        imagePullPolicy: {{ .Values.airflow.image.pull_policy }}
        args: ["scheduler"]
        envFrom:
        - secretRef:
            name: airflow-env
        env:
        - name: AIRFLOW_KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: airflow-config
          mountPath: /usr/local/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: airflow-dags
          mountPath: /usr/local/airflow/dags
        - name: airflow-logs
          mountPath: /usr/local/airflow/logs
      volumes:
      - name: airflow-logs
        persistentVolumeClaim:
          claimName: airflow-logs
      - name: airflow-config
        configMap:
          name: airflow-config
      - name: airflow-dags
        emptyDir: {}
